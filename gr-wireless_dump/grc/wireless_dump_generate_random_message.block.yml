id: wireless_dump_generate_random_message
label: generate_random_message
category: '[Wireless Dump]'

templates:
  imports: from gnuradio import wireless_dump
  make: wireless_dump.generate_random_message(${pattern}, ${pdu_length}, ${random}, ${interval}, ${num_msg})
  callbacks:
  - set_pattern(${pattern})
  - set_pdu_len(${pdu_length})
  - set_random(${random})
  - set_interval(${interval})
  - set_num_msg(${num_msg})
#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#     * default
parameters:
- id: pattern
  label: "Message Pattern"
  dtype: string

- id: pdu_length
  label: "PDU Length"
  dtype: int
  default: 10

- id: num_msg
  label: "Number of Message"
  dtype: int
  default: 10

- id: interval
  label: "Message Interval (ms)"
  dtype: int
  default: 100

- id: random
  label: "Random Message"
  dtype: int
  default: 0
  options: [1, 0]
  option_labels: [Enable, Disable]
#- id: ...
#  label: ...
#  dtype: ...

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
# inputs:
#- label: ...
#  domain: ...
#  dtype: ...
#  vlen: ...
#  optional: ...

outputs:
- label: out
  domain: message
  dtype: raw

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
