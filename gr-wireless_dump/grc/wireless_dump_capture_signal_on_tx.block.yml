id: wireless_dump_capture_signal_on_tx
label: Capture Signal
category: '[Wireless Dump]'

templates:
  imports: from gnuradio import wireless_dump
  make: wireless_dump.capture_signal_on_tx(${record}, ${debug})
  callbacks:
  # - set_modulation(${mod})
  # - set_pdu_len(${pdu_len})
  - set_debug(${debug})
  - set_record(${record})
#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#     * default
parameters:
# - id: mod
#   label: Mod
#   dtype: int
#   default: '0'

- id: record
  label: Record Packets
  dtype: int
  default: '0'

# - id: pdu_len
#   label: Packet Length
#   dtype: int

- id: debug
  label: Debug
  dtype: int
  default: 0
  options: [1, 0]
  option_labels: [Enable, Disable]
#- id: ...
#  label: ...
#  dtype: ...

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- label: in
  domain: stream
  dtype: complex
#  vlen: ...
#  optional: ...

# outputs:
#- label: ...
#  domain: ...
#  dtype: ...
#  vlen: ...
#  optional: ...

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
