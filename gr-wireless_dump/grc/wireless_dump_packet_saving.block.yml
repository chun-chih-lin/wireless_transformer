id: wireless_dump_packet_saving
label: Save Packets
category: '[Wireless Dump]'

templates:
  imports: from gnuradio import wireless_dump
  make: wireless_dump.packet_saving(${save_folder}, ${save_filename}, ${threshold}, ${num_save_pkt}, ${debug}, ${record})
  callbacks:
  - set_save_folder(${save_folder})
  - set_save_filename(${save_filename})
  - set_threshold(${threshold})
  - set_num_save_pkt(${num_save_pkt})
  - set_debug(${debug})
  - set_record(${record})
#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#     * default
parameters:
- id: save_folder
  label: Save Folder

- id: save_filename
  label: Save Filename

- id: threshold
  label: Threshold
  dtype: float
  default: '0.005'

- id: num_save_pkt
  label: Number of Save Packet
  dtype: int
  default: '20000'

- id: record
  label: Record Packets
  dtype: int
  default: '0'

- id: debug
  label: Debug
  dtype: int
  default: 0
  options: [1, 0]
  option_labels: [Enable, Disable]

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- label: in_raw
  domain: stream
  dtype: complex

- label: in_avg
  domain: stream
  dtype: complex

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
