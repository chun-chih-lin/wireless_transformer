id: wireless_dump_packet_saving
label: Save Packets
category: '[Wireless Dump]'

templates:
  imports: from gnuradio import wireless_dump
  make: wireless_dump.packet_saving(${mod}, ${tx_pwr}, ${save_folder}, ${save_prefix}, ${carrier_freq}, ${distance}, ${interference}, ${samp_rate}, ${threshold}, ${num_save_pkt}, ${debug}, ${record})
  callbacks:
  - self.set_debug(${debug})
  - self.set_mod(${mod})
  - self.set_tx_pwr(${tx_pwr})
  - self.set_save_folder(${save_folder})
  - self.set_save_prefix(${save_prefix})
  - self.set_carrier_freq(${carrier_freq})
  - self.set_distance(${distance})
  - self.set_interference(${interference})
  - self.set_samp_rate(${samp_rate})
  - self.set_threshold(${threshold})
  - self.set_num_save_pkt(${num_save_pkt})
  - self.set_record(${record})
#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#     * default
parameters:
- id: mod
  label: Modulation Name

- id: tx_pwr
  label: TX Power
  dtype: float

- id: save_folder
  label: Save Folder

- id: save_prefix
  label: Save Prefix

- id: carrier_freq
  label: Carrier Frequency
  dtype: float

- id: distance
  label: Distance
  dtype: int
  default: '1'

- id: interference
  label: Interference
  dtype: int
  default: '0'

- id: samp_rate
  label: Sample Rate
  dtype: float
  default: '5000000'

- id: threshold
  label: Threshold
  dtype: float
  default: '0.005'

- id: num_save_pkt
  label: Number of Save Packet
  dtype: int
  default: '20000'

- id: record
  label: Record Packets
  dtype: int
  default: '0'

- id: debug
  label: Debug
  dtype: int
  default: 0
  options: [1, 0]
  option_labels: [Enable, Disable]

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
- label: in_raw
  domain: stream
  dtype: complex

- label: in_avg
  domain: stream
  dtype: complex

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
